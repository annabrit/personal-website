{"version":3,"sources":["components/atoms/ProfilePic/IMG_4554.JPG","fontawesomeIconLibrary.js","components/atoms/ProfileIcon/index.js","components/atoms/StackIcon/index.js","components/atoms/ProfilePic/index.js","components/atoms/SubHeadingText/index.js","components/atoms/ColorDrip/index.js","components/atoms/SectionHeadingText/index.js","components/atoms/Card/index.js","components/molecules/StackSummary/index.js","components/molecules/ColorFall/index.js","components/organisms/ProjectDescription/index.js","components/organisms/ProfileBackground/index.js","components/ecosystems/ProjectSection/index.js","components/ecosystems/ProfileSection/index.js","components/ecosystems/AboutSection/index.js","components/environment/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","library","add","faGithubAlt","faLinkedinIn","faAngellist","faCircle","faLaptop","faServer","faDatabase","faExternalLinkAlt","faCode","ProfileIcon","_ref","link","name","console","log","concat","react_default","a","createElement","className","href","id","r","offset","stopColor","xlinkHref","attributeName","dur","from","to","repeatCount","begin","fill","restart","cx","cy","x","y","react_fontawesome_index_es","icon","height","width","StackIcon","front-end","server-side","database","warn","size","fixedWidth","ProfilePic","image","src","selfie","alt","SubHeadingText","children","ColorDrip","SectionHeadingText","Card","StackSummary","techs","notes","atoms_StackIcon","map","tech","idx","key","atoms_SubHeadingText","ColorFall","drips","Array","length","place","num","atoms_ColorDrip","ProjectDescription","title","links","description","techStack","atoms_Card","code","mask","transform","live","stack","molecules_StackSummary","ProfileBackground","molecules_ColorFall","ProjectSection","projects","atoms_SectionHeadingText","project","organisms_ProjectDescription","ProfileSection","organisms_ProfileBackground","atoms_ProfilePic","atoms_ProfileIcon","AboutSection","App","ecosystems_ProfileSection","ecosystems_AboutSection","ecosystems_ProjectSection","website","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_environment_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4234e0f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_4554.67d30194.JPG\";","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faCircle,\n  faLaptop,\n  faServer,\n  faDatabase,\n  faExternalLinkAlt,\n  faCode\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faGithubAlt,\n  faLinkedinIn,\n  faAngellist\n} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(\n  faGithubAlt,\n  faLinkedinIn,\n  faAngellist,\n  faCircle,\n  faLaptop,\n  faServer,\n  faDatabase,\n  faExternalLinkAlt,\n  faCode\n);\n","import React from 'react';\nimport '../../../fontawesomeIconLibrary';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './ProfileIcon.scss';\n\nconst ProfileIcon = ({ link, name }) => {\n  console.log(`${name[1]}-small-gradient`);\n  return (\n    <div className=\"profile-icon\">\n      <a href={link}>\n        <svg className=\"svg-button\">\n          <defs>\n            <radialGradient id={`${name[1]}-small-gradient`} r=\"100%\">\n              <stop offset=\"10%\" stopColor=\"#C0DD5F\" />\n              <stop offset=\"70%\" stopColor=\"#8DC403\" />\n              <stop offset=\"100%\" stopColor=\"#C0DD5F\" />\n            </radialGradient>\n\n            <animate\n              xlinkHref={`#${name[1]}-small-gradient`}\n              attributeName=\"r\"\n              dur=\"500ms\"\n              from=\"30%\"\n              to=\"100%\"\n              repeatCount=\"1\"\n              begin={`${name[1]}-grow-anim.begin+ 60ms`}\n              fill=\"remove\"\n            />\n            <animate\n              xlinkHref={`#${name[1]}-button-circle`}\n              attributeName=\"r\"\n              begin=\"mouseover\"\n              dur=\"500ms\"\n              repeatCount=\"1\"\n              restart=\"whenNotActive\"\n              from=\"40%\"\n              to=\"50%\"\n              id={`${name[1]}-grow-anim`}\n              fill=\"freeze\"\n            />\n            <animate\n              xlinkHref={`#${name[1]}-button-circle`}\n              attributeName=\"r\"\n              begin={`${name[1]}-grow-anim.end + 500ms`}\n              dur=\"250ms\"\n              repeatCount=\"1\"\n              to=\"40%\"\n              fill=\"freeze\"\n            />\n          </defs>\n          <circle\n            id={`${name[1]}-button-circle`}\n            fill={`url(#${name[1]}-small-gradient)`}\n            cx=\"50%\"\n            cy=\"50%\"\n            r=\"40%\"\n          />\n          <svg className=\"svg-icon-wrapper\" x=\"31%\" y=\"31%\">\n            <FontAwesomeIcon\n              className=\"icon\"\n              icon={name}\n              height=\"40%\"\n              width=\"40%\"\n            />\n          </svg>\n        </svg>\n      </a>\n    </div>\n  );\n};\n\nexport default ProfileIcon;\n","import React from 'react';\nimport '../../../fontawesomeIconLibrary';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './StackIcon.scss';\n\nconst StackIcon = ({ name }) => {\n  const iconNamesRef = {\n    'front-end': ['fa', 'laptop'],\n    'server-side': ['fa', 'server'],\n    database: ['fa', 'database']\n  };\n  var icon = iconNamesRef[name];\n  if (!icon) {\n    console.warn(\n      'name for StackIcon needs to be one of front-end, server-side, or database'\n    );\n  }\n  return (\n    <FontAwesomeIcon className=\"stack-icon\" icon={icon} size=\"6x\" fixedWidth />\n  );\n};\n\nexport default StackIcon;\n","import React from 'react';\nimport selfie from './IMG_4554.JPG';\n\nconst ProfilePic = ({ image }) => {\n  return (\n    <img\n      className=\"profile-image\"\n      src={selfie}\n      alt=\"me, standing in front of a birch tree graphic \"\n    />\n  );\n};\n\nexport default ProfilePic;\n","import React from 'react';\nimport './SubHeadingText.scss';\n\nconst SubHeadingText = ({ children }) => {\n  return <p className=\"sub-heading-text\">{children}</p>;\n};\n\nexport default SubHeadingText;\n","import React from 'react';\nimport './ColorDrip.scss';\n\nconst ColorDrip = ({ className }) => {\n  return <div className={`color-drip ${className}`} />;\n};\n\nexport default ColorDrip;\n","import React from 'react';\nimport './SectionHeadingText.scss';\n\nconst SectionHeadingText = ({ children }) => {\n  return <h2 className=\"section-heading-text\">{children}</h2>;\n};\n\nexport default SectionHeadingText;\n","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({ children }) => {\n  return (\n    <div className=\"card-shadow\">\n      <div className=\"card\">{children}</div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { StackIcon, SubHeadingText } from '../../atoms';\nimport './StackSummary.scss';\n\nconst StackSummary = ({ name, techs, notes }) => {\n  return (\n    <div className=\"StackSummary\">\n      <div className=\"container\">\n        <StackIcon name={name} />\n      </div>\n      <div className=\"container\">\n        <ul>\n          {techs.map((tech, idx) => (\n            <li key={idx}>\n              <SubHeadingText>{tech}</SubHeadingText>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"container text\">\n        <p>{notes}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StackSummary;\n","import React from 'react';\nimport { ColorDrip } from '../../atoms';\nimport './ColorFall.scss';\n\nconst ColorFall = () => {\n  let drips = Array.from({ length: 5 }, (place, num) => {\n    return (\n      <div className=\"stack\">\n        <ColorDrip\n          key={`color-drip-${num}-under`}\n          className={`color-drip-${num}-under`}\n        />\n        <ColorDrip\n          key={`color-drip-${num}-over`}\n          className={`color-drip-${num}-over`}\n        />\n      </div>\n    );\n  });\n  return <div className=\"color-fall\">{drips}</div>;\n};\n\nexport default ColorFall;\n","import React from 'react';\nimport { Card } from '../../atoms';\nimport { StackSummary } from '../../molecules';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './ProjectDescription.scss';\n\nconst ProjectDescription = ({ title, links, description, techStack }) => {\n  return (\n    <div className=\"Project-section-wrapper\">\n      <Card>\n        <div className=\"ProjectSection\">\n          <div className=\"project-section-header\">\n            <h3>{title}</h3>\n            <div className=\"external-project-links\">\n              <a href={links.code}>\n                <FontAwesomeIcon\n                  className=\"project-icon\"\n                  icon={['fa', 'code']}\n                  mask={['fa', 'circle']}\n                  transform=\"shrink-9\"\n                />\n              </a>\n              <a href={links.live}>\n                <FontAwesomeIcon\n                  className=\"project-icon\"\n                  icon={['fas', 'external-link-alt']}\n                  transform=\"shrink-9 right-0.7\"\n                  mask={['fa', 'circle']}\n                />\n              </a>\n            </div>\n          </div>\n          <p>{description}</p>\n          {techStack.map((stack, idx) => {\n            return (\n              <StackSummary\n                name={stack.name}\n                techs={stack.techs}\n                notes={stack.notes}\n                key={idx}\n              />\n            );\n          })}\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default ProjectDescription;\n","import React from 'react';\nimport { ColorFall } from '../../molecules';\nimport './ProfileBackground.scss';\n\nconst ProfileBackground = ({ children }) => {\n  return (\n    <div>\n      <div className=\"profile-background\">{children}</div>\n      <ColorFall />\n    </div>\n  );\n};\n\nexport default ProfileBackground;\n","import React from 'react';\nimport { ProjectDescription } from '../../organisms';\nimport { SectionHeadingText } from '../../atoms';\n\nconst ProjectSection = ({ projects }) => {\n  return (\n    <section className=\"project-section\">\n      <div>\n        <SectionHeadingText>projects</SectionHeadingText>\n      </div>\n      {projects.map((project, key) => {\n        return (\n          <ProjectDescription\n            title={project.title}\n            description={project.description}\n            techStack={project.techStack}\n            links={project.links}\n            key={key}\n          />\n        );\n      })}\n    </section>\n  );\n};\n\nexport default ProjectSection;\n","import React from 'react';\nimport { ProfileBackground } from '../../organisms';\nimport { ProfilePic, ProfileIcon } from '../../atoms';\nimport './ProfileSection.scss';\n\nconst ProfileSection = ({ children }) => {\n  return (\n    <div className=\"profile\">\n      <ProfileBackground>\n        <h1>{children}</h1>\n        <ProfilePic />\n        <div className=\"profile-icon-wrapper\">\n          <ProfileIcon\n            link=\"https://github.com/annabrit\"\n            name={['fab', 'github-alt']}\n          />\n          <ProfileIcon\n            link=\"https://www.linkedin.com/in/annabrit/\"\n            name={['fab', 'linkedin-in']}\n          />\n          <ProfileIcon\n            link=\"https://angel.co/annabrit\"\n            name={['fab', 'angellist']}\n          />\n        </div>\n      </ProfileBackground>\n    </div>\n  );\n};\n\nexport default ProfileSection;\n","import React from 'react';\nimport { Card, SectionHeadingText } from '../../atoms';\n\nconst AboutSection = ({ children }) => {\n  return (\n    <section className=\"about-section\">\n      <SectionHeadingText>about</SectionHeadingText>\n      <Card>\n        <p>{children}</p>\n      </Card>\n    </section>\n  );\n};\n\nexport default AboutSection;\n","import React, { Component } from 'react';\nimport { ProjectSection, ProfileSection, AboutSection } from '../ecosystems';\nimport './App.scss';\nimport '../../fontawesomeIconLibrary';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ProfileSection>hi!</ProfileSection>\n        <div className=\"right-side-content\">\n          <AboutSection>\n            I’m Anna-Brit Schlaepfer. I’m easily excitable and often intensely\n            curious, and I aspire to be the sort of person who is always\n            learning and tinkering. I enjoy the human side of software\n            development- readable code, modular organization, and declarative\n            code style.\n          </AboutSection>\n          <ProjectSection\n            projects={[\n              {\n                title: 'personal website',\n                description:\n                  \"I wanted a website to document my personal projects and the technologies I use to build them. I played around with a few themes before settling on moody blues and sour greens and yellows. I've been enjoying the abundance of blue tones, and I'll miss them when trends shift.\",\n                techStack: [\n                  {\n                    name: 'front-end',\n                    techs: ['React', 'Sass'],\n                    notes:\n                      \"Even though this project doesn't require any interactivity or have need for state, I wanted to build another project with React just because I enjoy the process of compartmentalizing visual elements. In a past project, I'd used the Styled Component library, but it tended to multiply named components, and I wanted to explore other styling options. I tried out Sass. It was a lot of fun, but CSS in JS would have been the better choice. Some of the SVGs needed in-line styling for animating, and splitting the styling between two different types of files wasn't ideal.\"\n                  }\n                ],\n                links: {\n                  code: 'https://github.com/annabrit/personal-website',\n                  website: 'https://annabrit.github.io/personal-website'\n                }\n              }\n            ]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/environment/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}